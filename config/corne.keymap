/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        rgb_layer: rgb_layer {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &to MACRO_PLACEHOLDER &macro_param_2to2 &rgb_ug RGB_COLOR_HSB_CMD MACRO_PLACEHOLDER>;
            label = "RGB_LAYER";
        };

        rus: rus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 1>;
            label = "RUS";
        };

        win_enter: win_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(ENTER)>;
            label = "WIN_ENTER";
        };

        rus_lay: rus_lay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&rus &win_enter>;

            label = "RUS_LAY";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE     &kp Q           &kp W             &kp E         &kp R      &kp T        &kp Y    &kp U                                      &kp I             &kp O             &kp P               &kp ESCAPE
&kp BACKSPACE  &mt LEFT_ALT A  &mt LEFT_SHIFT S  &mt LCTRL D   &mt TAB F  &kp G        &kp H    &mt TAB J                                  &mt LCTRL K       &mt LEFT_SHIFT L  &mt LEFT_ALT SLASH  &kp BACKSPACE
&kp DELETE     &kp Z           &kp X             &kp C         &kp V      &kp B        &kp N    &kp M                                      &kp COMMA         &kp DOT           &kp SEMI            &kp DELETE
                                                 &kp LEFT_GUI  &mo 2      &kp SPACE    &kp RET  &rgb_layer 3 RGB_COLOR_HSB_VAL(231,99,50)  &kp LG(LEFT_GUI)
            >;
        };

        rus_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE     &kp Q           &kp W             &kp E        &kp R                                     &kp T        &kp Y    &kp U                                       &kp I        &kp O             &kp P              &kp BSPC
&kp BACKSPACE  &mt LEFT_ALT A  &mt LEFT_SHIFT S  &mt LCTRL D  &mt TAB F                                 &kp G        &kp H    &mt TAB J                                   &mt LCTRL K  &mt LEFT_SHIFT L  &mt LEFT_ALT SEMI  &kp SQT
&kp DELETE     &kp Z           &kp X             &kp C        &kp V                                     &kp B        &kp N    &kp M                                       &kp COMMA    &kp DOT           &kp FSLH           &kp ESC
                                                 &kp LGUI     &rgb_layer 0 RGB_COLOR_HSB_VAL(0,100,50)  &kp SPACE    &kp RET  &rgb_layer 3 RGB_COLOR_HSB_VAL(220,100,50)  &kp RALT
            >;
        };

        tab_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE     &kp EXCL           &kp QUESTION         &kp CARET     &kp PIPE       &kp ASTERISK     &kp SLASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp NON_US_BACKSLASH      &kp TILDE         &kp ESCAPE
&kp BACKSPACE  &mt LEFT_ALT LEFT  &mt LEFT_SHIFT DOWN  &mt LCTRL UP  &mt TAB RIGHT  &kp PLUS         &kp MINUS     &mt TAB LEFT_BRACKET  &mt LCTRL RIGHT_BRACKET  &mt LEFT_SHIFT SEMICOLON  &mt LEFT_ALT SQT  &kp BACKSPACE
&kp DELETE     &kp AT_SIGN        &kp HASH             &kp DOLLAR    &kp PERCENT    &kp AMPERSAND    &kp ASTERISK  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp COMMA                 &kp PERIOD        &kp LS(DELETE)
                                                       &kp LGUI      &none          &kp SPACE        &kp RET       &none                 &kp RALT
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE     &kp NUMBER_1           &kp NUMBER_2             &kp NUMBER_3        &kp PLUS                                  &kp ASTERISK    &kp HOME  &kp PAGE_DOWN                               &kp PAGE_UP   &kp END               &kp PRINTSCREEN  &kp ESCAPE
&kp BACKSPACE  &mt LEFT_ALT NUMBER_4  &mt LEFT_SHIFT NUMBER_5  &mt LCTRL NUMBER_6  &mt TAB MINUS                             &kp SLASH       &kp LEFT  &mt TAB DOWN                                &mt LCTRL UP  &mt LEFT_SHIFT RIGHT  &kp LEFT_ALT     &kp BACKSPACE
&kp DELETE     &kp NUMBER_7           &kp NUMBER_8             &kp NUMBER_9        &kp COMMA                                 &kp PERIOD      &none     &none                                       &none         &none                 &kp K_MENU       &kp DELETE
                                                               &kp LGUI            &rgb_layer 0 RGB_COLOR_HSB_VAL(0,100,50)  &kp SPACE       &kp RET   &rgb_layer 4 RGB_COLOR_HSB_VAL(121,100,50)  &kp NUMBER_0
            >;
        };

        control_layer {
            bindings = <
&trans      &trans        &trans        &trans        &trans                                      &trans          &trans  &trans                                    &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                                &bt BT_SEL 4    &trans  &trans                                    &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans                                      &trans          &trans  &trans                                    &trans  &trans  &trans  &trans
                                        &trans        &rgb_layer 3 RGB_COLOR_HSB_VAL(241,100,50)  &bootloader     &trans  &rgb_layer 0 RGB_COLOR_HSB_VAL(0,100,50)  &trans
            >;
        };
    };
};
